#!/bin/bash
python_path=`which python2.7 2>/dev/null`
if [ -z "$python_path" ]; then
	python_path=`which python 2>/dev/null`
fi
if [ -z "$python_path" ]; then
	python_path=`which python3 2>/dev/null`
fi

if [ -z "$python_path" ]; then
	exit 0
fi

################################################################################

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		no-fetch)
			echo "no-fetch cancels fetching, returning."
			exit 0
			;;
		esac
		i=$((i + 1))
	done
fi

################################################################################

"$python_path" -c "import socket; s = socket.socket(); s.settimeout(2); s.connect(('127.0.0.1', 43110)); s.close()" >/dev/null 2>&1
if [ $? -eq 0 ]; then
	echo "ZeroNet already running, skipping fetching."
	exit 0
fi

zeronet_home=$(realpath `git config --get zeronet.home` 2>/dev/null)

# Handle paths without ZeroNet/ and core/
# ZeroBundle
if [ ! -z "$zeronet_home" ] && [ -d "$zeronet_home/ZeroNet" ]; then
	zeronet_home="$zeronet_home/ZeroNet"
# Windows distributable
elif [ ! -z "$zeronet_home" ] && [ -d "$zeronet_home/core" ]; then
	zeronet_home="$zeronet_home/core"
fi

"$python_path" --version | grep "Python 3" >/dev/null 2>/dev/null
if [ $? -eq 0 ]; then
	# Try to find Python 2 in bundles

	# Windows ZeroBundle
	if [ ! -z "$zeronet_home" ] && [ -f "$zeronet_home/../Python/python.exe" ]; then
		python_path="$zeronet_home/../Python/python.exe"
		zeronet_py="\"$python_path\" \"$zeronet_home/zeronet.py\""
	# Mac OS ZeroBundle
	elif [ ! -z "$zeronet_home" ] && [ -f "$zeronet_home/../../../Python/python" ]; then
		python_path="$zeronet_home/../../../Python/python"
		zeronet_py="\"$python_path\" \"$zeronet_home/zeronet.py\""
	# Linux ZeroBundle
	elif [ ! -z "$zeronet_home" ] && [ -f "$zeronet_home/Python/python" ]; then
		python_path="$zeronet_home/Python/python"
		zeronet_py="\"$python_path\" \"$zeronet_home/zeronet.py\""
	# Windows dist
	elif [ ! -z "$zeronet_home" ] && [ -f "$zeronet_home/ZeroNet.exe" ]; then
		zeronet_py="\"$zeronet_home/ZeroNet.exe\""
	# Windows dist core
	elif [ ! -z "$zeronet_home" ] && [ -f "$zeronet_home/../ZeroNet.exe" ]; then
		zeronet_py="\"$zeronet_home/../ZeroNet.exe\""
	else
		exit 0
	fi
else
	zeronet_py="\"$python_path\" \"$zeronet_home/zeronet.py\""
fi

echo "Fetching ZeroNet..."
eval $zeronet_py siteDownload "$site" >/dev/null 2>&1

exit 0